<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Change Notification</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="76a6666d-9320-449b-8b85-1efbf4df4709" /><meta name="Description" content="The View holds a copy of the data provided by the ViewModel, which is why the View needs to be notified when the data in the ViewModel changes. All XAML-based View objects automatically look for implementations of T:System.Componentmodel." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Ember+ Sharp Project Documentation v1.4.1702.9003<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="046877b5-3e57-48ca-8868-7885de0e3842.htm" title="Ember+ Sharp Project Documentation v1.4.1702.9003" tocid="roottoc">Ember+ Sharp Project Documentation v1.4.1702.9003</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="915a270d-2a20-432f-9531-ce6aa3260566.htm" title="Ember+ Sharp Library" tocid="915a270d-2a20-432f-9531-ce6aa3260566">Ember+ Sharp Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="fa86e52c-0fb0-4acb-9b55-fb689eb5f17c.htm" title="Lawo.ComponentModel Namespace Tutorial" tocid="fa86e52c-0fb0-4acb-9b55-fb689eb5f17c">Lawo.ComponentModel Namespace Tutorial</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d640f3f7-b516-4428-8ceb-d7a9a703babd.htm" title="Example" tocid="d640f3f7-b516-4428-8ceb-d7a9a703babd">Example</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="a8575c94-9500-4717-b35b-cd2f5eff1a4e.htm" title="ViewModel" tocid="a8575c94-9500-4717-b35b-cd2f5eff1a4e">ViewModel</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="48ea11d2-ae3a-4fb7-9baf-1612d57d3f97.htm" title="Members" tocid="48ea11d2-ae3a-4fb7-9baf-1612d57d3f97">Members</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="76a6666d-9320-449b-8b85-1efbf4df4709.htm" title="Change Notification" tocid="76a6666d-9320-449b-8b85-1efbf4df4709">Change Notification</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="5ab5798e-fc1a-4c8d-999c-d19329329614.htm" title="Binding to Model Data" tocid="5ab5798e-fc1a-4c8d-999c-d19329329614">Binding to Model Data</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">Change Notification</td><td class="logoColumn"><img src="../icons/Help.png" /></td></tr></table><span class="introStyle"></span><div class="introduction"><p>
        The <strong>View</strong> holds a copy of the data provided by the
        <strong>ViewModel</strong>, which is why the <strong>View</strong> needs to be notified when
        the data in the <strong>ViewModel</strong> changes. All <strong>XAML</strong>-based
        <strong>View</strong> objects automatically look for implementations of
        <a href="http://msdn2.microsoft.com/en-us/library/ms133020" target="_blank">INotifyPropertyChanged</a> and
        <a href="http://msdn2.microsoft.com/en-us/library/ms668629" target="_blank">INotifyCollectionChanged</a>
        and subscribe to the provided events as appropriate. <strong>ViewModel</strong> developers can reuse
        the following implementations:
      </p><ul><li><p><a href="C2857D6D.htm">NotifyPropertyChanged</a>:
            <strong>ViewModel</strong> implementations as well as the types of composite properties usually
            derive from this base class.
          </p></li><li><p>
            Collection properties are usually of the type
            <a href="http://msdn2.microsoft.com/en-us/library/ms668604" target="_blank">ObservableCollection<span id="LSTA965BE03_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA965BE03_0?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTA965BE03_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA965BE03_1?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> or
            <a href="http://msdn2.microsoft.com/en-us/library/ms668620" target="_blank">ReadOnlyObservableCollection<span id="LSTA965BE03_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA965BE03_2?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTA965BE03_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA965BE03_3?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.
          </p></li></ul><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#PrimitiveProperties">Primitive Properties</a></li><li class="outlineSectionEntry"><a href="#CompositeProperties">Composite Properties</a></li><li class="outlineSectionEntry"><a href="#CollectionProperties">Collection Properties</a></li></ul></div><div class="collapsibleAreaRegion" id="PrimitiveProperties"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Primitive Properties</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
          A primitive property provides data that can directly be shown in the <strong>View</strong> (e.g.
          <span class="code">string</span>, <span class="code">double</span>, <span class="code">int</span>, etc.). A
          property where the value may change while it is being displayed in the <strong>View</strong>
          typically looks as follows:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EADADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EADADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EADADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> ProviderHostName
{
    <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-keyword">this</span>.providerHostName; }
    <span class="highlight-keyword">set</span> { <span class="highlight-keyword">this</span>.SetValue(<span class="highlight-keyword">ref</span> <span class="highlight-keyword">this</span>.providerHostName, <span class="highlight-keyword">value</span>); }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADADAAA");</script><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><p><a href="FB2853E5.htm">SetValue</a>
            does its magic with the
            <a href="http://msdn2.microsoft.com/en-us/library/hh551816" target="_blank">CallerMemberNameAttribute</a>.
            <a href="FB2853E5.htm">SetValue</a>
            should therefore only ever be called directly from a setter of a property.
          </p></td></tr></table></div><p>
          Of course, properties that never change their value do not need to concern themselves with change
          notification:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> Title
{
    <span class="highlight-keyword">get</span>
    {
        <span class="highlight-keyword">return</span> <span class="highlight-literal">"Lawo Glow Analyzer Proxy "</span> +
            System.Reflection.Assembly.GetExecutingAssembly().GetName().Version;
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAADAAA");</script></div><div class="collapsibleAreaRegion" id="CompositeProperties"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Composite Properties</span></div><div id="ID2RBSection" class="collapsibleSection"><p>The getter of a composite property returns a value, which cannot directly be shown on the GUI:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> ConnectionViewModel ConsumerConnection =&gt; <span class="highlight-keyword">this</span>.consumerConnection;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACACAAA");</script><p>
          In this case the property value never changes. Of course, in general such properties can change their value
          too. Then, change notification needs to be implemented by calling
          <a href="FB2853E5.htm">SetValue</a>
          in the property setter just like a primitive property setter does.
        </p><p>
          Since the <strong>View</strong> will bind to properties of the returned value,
          <span class="code">ConnectionViewModel</span> must also implement
          <a href="http://msdn2.microsoft.com/en-us/library/ms133020" target="_blank">INotifyPropertyChanged</a>,
          here again by deriving from
          <a href="C2857D6D.htm">NotifyPropertyChanged</a>.
        </p></div><div class="collapsibleAreaRegion" id="CollectionProperties"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Collection Properties</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
          Whenever a <strong>View</strong> needs to display multiple items in a list, the associated
          <strong>ViewModel</strong> typically offers the necessary data through a property getter that
          returns a collection implementing the
          <a href="http://msdn2.microsoft.com/en-us/library/ms668629" target="_blank">INotifyCollectionChanged</a>
          interface:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EABABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> ReadOnlyObservableCollection&lt;Event&gt; Events =&gt; <span class="highlight-keyword">this</span>.readOnlyEvents;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABABAAA");</script><p>
          The <strong>.NET</strong> framework implementations
          <a href="http://msdn2.microsoft.com/en-us/library/ms668604" target="_blank">ObservableCollection<span id="LSTA965BE03_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA965BE03_4?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTA965BE03_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA965BE03_5?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> and
          <a href="http://msdn2.microsoft.com/en-us/library/ms668620" target="_blank">ReadOnlyObservableCollection<span id="LSTA965BE03_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA965BE03_6?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTA965BE03_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA965BE03_7?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
          are almost always sufficient. The former should only be used if the <strong>View</strong> itself can
          directly add and/or remove items. The latter is preferable when such operations are offered through
          <strong>ViewModel</strong> methods and of course also when the collection is immutable from the
          <strong>View</strong>.
        </p></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://www.boost.org/LICENSE_1_0.txt" target="_blank">Copyright 2012-2017 Lawo AG. Distributed under the Boost Software License, Version 1.0.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:andreas.huber%40lawo.com?Subject=Ember+ Sharp Project Documentation v1.4.1702.9003">Andreas Huber</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>