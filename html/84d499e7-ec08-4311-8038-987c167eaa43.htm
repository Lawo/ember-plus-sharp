<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Page 7: Send Local Changes to the Provider</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="84d499e7-ec08-4311-8038-987c167eaa43" /><meta name="Description" content="As you might expect, modifying a value is as easy as setting the P:Lawo.EmberPlusSharp.Model.IParameter.Value property. However, as we've already seen on , getting to specific elements is rather cumbersome:" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Ember+ Sharp Project Documentation v1.3.1611.30003<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="046877b5-3e57-48ca-8868-7885de0e3842.htm" title="Ember+ Sharp Project Documentation v1.3.1611.30003" tocid="roottoc">Ember+ Sharp Project Documentation v1.3.1611.30003</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="915a270d-2a20-432f-9531-ce6aa3260566.htm" title="Ember+ Sharp Library" tocid="915a270d-2a20-432f-9531-ce6aa3260566">Ember+ Sharp Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="427fadff-8d32-472e-83d1-3ceaf705ae51.htm" title="Lawo.EmberPlusSharp.Model Namespace Tutorial" tocid="427fadff-8d32-472e-83d1-3ceaf705ae51">Lawo.EmberPlusSharp.Model Namespace Tutorial</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c319e2c2-fa9a-4ad5-bc4f-74a85a91eb78.htm" title="Page 3: Dynamic Interface" tocid="c319e2c2-fa9a-4ad5-bc4f-74a85a91eb78">Page 3: Dynamic Interface</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="f6285c3c-ef54-453e-90ad-5546ec1a7a1d.htm" title="Page 4: Create a Local Copy of the Provider Database" tocid="f6285c3c-ef54-453e-90ad-5546ec1a7a1d">Page 4: Create a Local Copy of the Provider Database</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="e0972d29-96f3-4dea-936b-f77001d077b1.htm" title="Page 5: Iterate over the Local Database" tocid="e0972d29-96f3-4dea-936b-f77001d077b1">Page 5: Iterate over the Local Database</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="7cdb703a-14dd-42d3-8ea2-28a9b8af6663.htm" title="Page 6: React to Changes" tocid="7cdb703a-14dd-42d3-8ea2-28a9b8af6663">Page 6: React to Changes</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="84d499e7-ec08-4311-8038-987c167eaa43.htm" title="Page 7: Send Local Changes to the Provider" tocid="84d499e7-ec08-4311-8038-987c167eaa43">Page 7: Send Local Changes to the Provider</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="df1c42d3-bc00-4786-88d6-2372b281043a.htm" title="Page 8: Handle Communication Errors" tocid="df1c42d3-bc00-4786-88d6-2372b281043a">Page 8: Handle Communication Errors</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">Page 7: Send Local Changes to the Provider</td><td class="logoColumn"><img src="../icons/Help.png" /></td></tr></table><span class="introStyle"></span><div class="introduction"><p>
        As you might expect, modifying a value is as easy as setting the
        <a href="ED7FF041.htm">IParameter<span id="LST7245C196_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7245C196_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Value</a>
        property. However, as we've already seen on <a href="7cdb703a-14dd-42d3-8ea2-28a9b8af6663.htm">Page 6: React to Changes</a>, getting
        to specific elements is rather cumbersome:
      </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACBAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACBAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACBAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACBAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">AsyncPump.Run(
    <span class="highlight-keyword">async</span> () =&gt;
    {
        <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> client = <span class="highlight-keyword">await</span> ConnectAsync(<span class="highlight-literal">"localhost"</span>, <span class="highlight-number">9000</span>))
        <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> consumer = <span class="highlight-keyword">await</span> Consumer&lt;MyRoot&gt;.CreateAsync(client))
        {
            INode root = consumer.Root;

            <span class="highlight-comment">// Navigate to the parameters we're interested in.</span>
            <span class="highlight-keyword">var</span> sapphire = (INode)root.Children.First(c =&gt; c.Identifier == <span class="highlight-literal">"Sapphire"</span>);
            <span class="highlight-keyword">var</span> sources = (INode)sapphire.Children.First(c =&gt; c.Identifier == <span class="highlight-literal">"Sources"</span>);
            <span class="highlight-keyword">var</span> fpgm1 = (INode)sources.Children.First(c =&gt; c.Identifier == <span class="highlight-literal">"FPGM 1"</span>);
            <span class="highlight-keyword">var</span> fader = (INode)fpgm1.Children.First(c =&gt; c.Identifier == <span class="highlight-literal">"Fader"</span>);
            <span class="highlight-keyword">var</span> level = (IParameter)fader.Children.First(c =&gt; c.Identifier == <span class="highlight-literal">"dB Value"</span>);
            <span class="highlight-keyword">var</span> position = (IParameter)fader.Children.First(c =&gt; c.Identifier == <span class="highlight-literal">"Position"</span>);

            <span class="highlight-comment">// Set parameters to the desired values.</span>
            level.Value = <span class="highlight-number">-67.0</span>;
            position.Value = <span class="highlight-number">128</span>L;

            <span class="highlight-comment">// We send the changes back to the provider with the call below. Here, this is necessary so that</span>
            <span class="highlight-comment">// the changes are sent before Dispose is called on the consumer. In a real-world application</span>
            <span class="highlight-comment">// however, SendAsync often does not need to be called explicitly because it is automatically</span>
            <span class="highlight-comment">// called every 100ms as long as there are pending changes. See AutoSendInterval for more</span>
            <span class="highlight-comment">// information.</span>
            <span class="highlight-keyword">await</span> consumer.SendAsync();
        }
    });</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACBAAA");</script><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><p>
          As soon as a parameter is modified locally, provider changes are no longer applied to the parameter until the
          <a href="F1C18AE1.htm">Consumer<span id="LST7245C196_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7245C196_1?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TRoot<span id="LST7245C196_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7245C196_2?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script><span id="LST7245C196_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7245C196_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>AutoSendInterval</a>
          has elapsed or
          <a href="B5499501.htm">Consumer<span id="LST7245C196_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7245C196_4?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TRoot<span id="LST7245C196_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7245C196_5?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script><span id="LST7245C196_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7245C196_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SendAsync<span id="LST7245C196_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7245C196_7?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>
          is called.
        </p></td></tr></table></div><p>Proceed to <a href="df1c42d3-bc00-4786-88d6-2372b281043a.htm">Page 8: Handle Communication Errors</a>.</p></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://www.boost.org/LICENSE_1_0.txt" target="_blank">Copyright 2012-2016 Lawo AG. Distributed under the Boost Software License, Version 1.0.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:andreas.huber%40lawo.com?Subject=Ember+ Sharp Project Documentation v1.3.1611.30003">Andreas Huber</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>