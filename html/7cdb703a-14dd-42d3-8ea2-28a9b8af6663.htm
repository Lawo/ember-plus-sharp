<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Page 6: React to Changes</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="7cdb703a-14dd-42d3-8ea2-28a9b8af6663" /><meta name="Description" content="All element interfaces where properties may be changed by the provider (T:Lawo.EmberPlusSharp.Model.IElement, T:Lawo.EmberPlusSharp.Model.IParameter, T:Lawo.EmberPlusSharp.Model.INode) derive from T:System.ComponentModel.INotifyPropertyChanged." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Ember+ Sharp Project Documentation v1.3.1611.30003<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="046877b5-3e57-48ca-8868-7885de0e3842.htm" title="Ember+ Sharp Project Documentation v1.3.1611.30003" tocid="roottoc">Ember+ Sharp Project Documentation v1.3.1611.30003</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="915a270d-2a20-432f-9531-ce6aa3260566.htm" title="Ember+ Sharp Library" tocid="915a270d-2a20-432f-9531-ce6aa3260566">Ember+ Sharp Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="427fadff-8d32-472e-83d1-3ceaf705ae51.htm" title="Lawo.EmberPlusSharp.Model Namespace Tutorial" tocid="427fadff-8d32-472e-83d1-3ceaf705ae51">Lawo.EmberPlusSharp.Model Namespace Tutorial</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c319e2c2-fa9a-4ad5-bc4f-74a85a91eb78.htm" title="Page 3: Dynamic Interface" tocid="c319e2c2-fa9a-4ad5-bc4f-74a85a91eb78">Page 3: Dynamic Interface</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="f6285c3c-ef54-453e-90ad-5546ec1a7a1d.htm" title="Page 4: Create a Local Copy of the Provider Database" tocid="f6285c3c-ef54-453e-90ad-5546ec1a7a1d">Page 4: Create a Local Copy of the Provider Database</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="e0972d29-96f3-4dea-936b-f77001d077b1.htm" title="Page 5: Iterate over the Local Database" tocid="e0972d29-96f3-4dea-936b-f77001d077b1">Page 5: Iterate over the Local Database</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="7cdb703a-14dd-42d3-8ea2-28a9b8af6663.htm" title="Page 6: React to Changes" tocid="7cdb703a-14dd-42d3-8ea2-28a9b8af6663">Page 6: React to Changes</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="84d499e7-ec08-4311-8038-987c167eaa43.htm" title="Page 7: Send Local Changes to the Provider" tocid="84d499e7-ec08-4311-8038-987c167eaa43">Page 7: Send Local Changes to the Provider</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="df1c42d3-bc00-4786-88d6-2372b281043a.htm" title="Page 8: Handle Communication Errors" tocid="df1c42d3-bc00-4786-88d6-2372b281043a">Page 8: Handle Communication Errors</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">Page 6: React to Changes</td><td class="logoColumn"><img src="../icons/Help.png" /></td></tr></table><span class="introStyle"></span><div class="introduction"><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#PropertyChanges">Property Changes</a></li><li class="outlineSectionEntry"><a href="#CollectionChanges">Collection Changes</a></li></ul></div><div class="collapsibleAreaRegion" id="PropertyChanges"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Property Changes</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
          All element interfaces where properties may be changed by the provider
          (<a href="82B4BF8F.htm">IElement</a>,
          <a href="49FA7AAD.htm">IParameter</a>,
          <a href="164F4A96.htm">INode</a>) derive from
          <a href="http://msdn2.microsoft.com/en-us/library/ms133020" target="_blank">INotifyPropertyChanged</a>. Their
          <a href="http://msdn2.microsoft.com/en-us/library/ms133023" target="_blank">PropertyChanged</a>
          event occurs whenever a provider change has been applied.
        </p><p>
          The
          <a href="http://msdn2.microsoft.com/en-us/library/ms133023" target="_blank">PropertyChanged</a>
          event also occurs when
          <a href="ED7FF041.htm">IParameter<span id="LSTB4401174_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB4401174_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Value</a>
          (or one of its strongly typed variants) is modified locally.
        </p><p>
          In a generic application like e.g. a viewer it would be straightforward to subscribe to
          <a href="http://msdn2.microsoft.com/en-us/library/ms133023" target="_blank">PropertyChanged</a>. In
          the code below however, for demonstration purposes we're going to subscribe to event of a specific parameter.
          As mentioned earlier, the dynamic interface is not very well suited for tasks that make assumptions about the
          contents of the database:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAEACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAEACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAEACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">AsyncPump.Run(
    <span class="highlight-keyword">async</span> () =&gt;
    {
        <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> client = <span class="highlight-keyword">await</span> ConnectAsync(<span class="highlight-literal">"localhost"</span>, <span class="highlight-number">9000</span>))
        <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> consumer = <span class="highlight-keyword">await</span> Consumer&lt;MyRoot&gt;.CreateAsync(client))
        {
            INode root = consumer.Root;

            <span class="highlight-comment">// Navigate to the parameter we're interested in.</span>
            <span class="highlight-keyword">var</span> sapphire = (INode)root.Children.First(c =&gt; c.Identifier == <span class="highlight-literal">"Sapphire"</span>);
            <span class="highlight-keyword">var</span> sources = (INode)sapphire.Children.First(c =&gt; c.Identifier == <span class="highlight-literal">"Sources"</span>);
            <span class="highlight-keyword">var</span> fpgm1 = (INode)sources.Children.First(c =&gt; c.Identifier == <span class="highlight-literal">"FPGM 1"</span>);
            <span class="highlight-keyword">var</span> fader = (INode)fpgm1.Children.First(c =&gt; c.Identifier == <span class="highlight-literal">"Fader"</span>);
            <span class="highlight-keyword">var</span> positionParameter = fader.Children.First(c =&gt; c.Identifier == <span class="highlight-literal">"Position"</span>);

            <span class="highlight-keyword">var</span> valueChanged = <span class="highlight-keyword">new</span> TaskCompletionSource&lt;<span class="highlight-keyword">string</span>&gt;();
            positionParameter.PropertyChanged += (s, e) =&gt; valueChanged.SetResult(((IElement)s).GetPath());
            Console.WriteLine(<span class="highlight-literal">"Waiting for the parameter to change..."</span>);
            Console.WriteLine(<span class="highlight-literal">"A value of the element with the path {0} has been changed."</span>, <span class="highlight-keyword">await</span> valueChanged.Task);
        }
    });</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAEACAAA");</script><p>Specifically, the code above has the following problems:</p><ul><li><p>
              No attempt is made to handle exceptions that might result from incorrect assumptions. Such exceptions
              could be thrown when an expected element is not present (e.g. the parameter is named
              <span class="code">Pos</span> rather than <span class="code">Position</span>), the actual element has a
              different type (e.g. <span class="code">Position</span> is of type
              <a href="164F4A96.htm">INode</a> rather than
              <a href="49FA7AAD.htm">IParameter</a>) or
              <span class="code">Position</span> is really a <span class="code">double</span> rather than a
              <span class="code">long</span>. Robust code would have to handle these exceptions which would make the
              process even more tedious than it already is.
            </p></li><li><p>
              The interface offers no way of getting an element by name. The code above has to use
              <strong>LINQ</strong> to search for the desired elements, which is cumbersome and inefficient.
            </p></li></ul><p>We will see later how the static interface is a much better fit for this scenario.</p><p>
          We can test this by running the above program and then modfiying a value of the parameter in
          <strong>Tiny Ember+</strong>.
        </p></div><div class="collapsibleAreaRegion" id="CollectionChanges"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Collection Changes</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
          All exposed collections implement the
          <a href="http://msdn2.microsoft.com/en-us/library/ms668629" target="_blank">INotifyCollectionChanged</a> interface.
        </p><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note" /> Note</th></tr><tr><td><p>
            Throughout its lifetime, a consumer automatically sends <span class="code">getDirectory</span> commands to
            retrieve children client code has declared interest in. This is done recursively down to leaf elements and
            new nodes are only announced through
            <a href="http://msdn2.microsoft.com/en-us/library/ms668629" target="_blank">INotifyCollectionChanged</a>
            once all children (including grandchildren, great-grandchildren, etc.) have been received from the provider.
          </p></td></tr></table></div><p>Proceed to <a href="84d499e7-ec08-4311-8038-987c167eaa43.htm">Page 7: Send Local Changes to the Provider</a>.</p></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://www.boost.org/LICENSE_1_0.txt" target="_blank">Copyright 2012-2016 Lawo AG. Distributed under the Boost Software License, Version 1.0.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:andreas.huber%40lawo.com?Subject=Ember+ Sharp Project Documentation v1.3.1611.30003">Andreas Huber</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>