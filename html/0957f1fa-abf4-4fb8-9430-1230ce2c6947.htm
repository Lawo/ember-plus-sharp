<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Page 10: Iterate over the Local Database</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="0957f1fa-abf4-4fb8-9430-1230ce2c6947" /><meta name="Description" content="It is assumed that you've followed the steps from to , and thus have a runnable project open in Visual Studio 2015." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Ember+ Sharp Project Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="046877b5-3e57-48ca-8868-7885de0e3842.htm" title="Ember+ Sharp Project Documentation" tocid="roottoc">Ember+ Sharp Project Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="427fadff-8d32-472e-83d1-3ceaf705ae51.htm" title="Lawo.EmberPlus.Model Namespace Tutorial" tocid="427fadff-8d32-472e-83d1-3ceaf705ae51">Lawo.EmberPlus.Model Namespace Tutorial</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="06184592-a364-4e11-9721-551b6316ffc1.htm" title="Page 9: Static Interface" tocid="06184592-a364-4e11-9721-551b6316ffc1">Page 9: Static Interface</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="0957f1fa-abf4-4fb8-9430-1230ce2c6947.htm" title="Page 10: Iterate over the Local Database" tocid="0957f1fa-abf4-4fb8-9430-1230ce2c6947">Page 10: Iterate over the Local Database</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="945c7c21-060f-4fb9-9cbd-842f0e031472.htm" title="Page 11: React to Changes" tocid="945c7c21-060f-4fb9-9cbd-842f0e031472">Page 11: React to Changes</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="e3a579ce-d73e-459b-ab70-48b79cc9e0c8.htm" title="Page 12: Send Local Changes to the Provider" tocid="e3a579ce-d73e-459b-ab70-48b79cc9e0c8">Page 12: Send Local Changes to the Provider</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="86ad72ee-d788-4511-9608-c27e29445f96.htm" title="Page 13: Unbounded Nodes" tocid="86ad72ee-d788-4511-9608-c27e29445f96">Page 13: Unbounded Nodes</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="15613e0f-7337-4a90-b538-1c402b4f8ad7.htm" title="Page 14: Optional Elements" tocid="15613e0f-7337-4a90-b538-1c402b4f8ad7">Page 14: Optional Elements</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="3d672617-cf26-40a0-bae0-9b3df394cf0e.htm" title="Page 15: Nullable Parameters" tocid="3d672617-cf26-40a0-bae0-9b3df394cf0e">Page 15: Nullable Parameters</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn">Page 10: Iterate over the Local Database</td></tr></table><span class="introStyle"></span><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p><div class="introduction"><p>
        It is assumed that you've followed the steps from <a href="5b9afbff-f6fc-4870-892f-6d6b76f85c67.htm">Page 1: Prerequisites</a> to
        <a href="df1c42d3-bc00-4786-88d6-2372b281043a.htm">Page 8: Handle Communication Errors</a>, and thus have a runnable project open in
        <strong>Visual Studio 2015</strong>.
      </p><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#DatabaseClasses">Database Classes</a></li><li class="outlineSectionEntry"><a href="#MainMethod">Main Method</a></li></ul></div><div class="collapsibleAreaRegion" id="DatabaseClasses"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Database Classes</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
          First we need to declare our expectations about the provider database with the following nested types:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> SapphireRoot : Root&lt;SapphireRoot&gt;
{
    <span class="highlight-keyword">internal</span> Sapphire Sapphire { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">private</span> <span class="highlight-keyword">set</span>; }
}

<span class="highlight-keyword">private</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> Sapphire : FieldNode&lt;Sapphire&gt;
{
    <span class="highlight-keyword">internal</span> Sources Sources { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">private</span> <span class="highlight-keyword">set</span>; }
}

<span class="highlight-keyword">private</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> Sources : FieldNode&lt;Sources&gt;
{
    [Element(Identifier = <span class="highlight-literal">"FPGM 1"</span>)]
    <span class="highlight-keyword">internal</span> Source Fpgm1 { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">private</span> <span class="highlight-keyword">set</span>; }

    [Element(Identifier = <span class="highlight-literal">"FPGM 2"</span>)]
    <span class="highlight-keyword">internal</span> Source Fpgm2 { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">private</span> <span class="highlight-keyword">set</span>; }
}

<span class="highlight-keyword">private</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> Source : FieldNode&lt;Source&gt;
{
    <span class="highlight-keyword">internal</span> Fader Fader { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">private</span> <span class="highlight-keyword">set</span>; }

    [Element(Identifier = <span class="highlight-literal">"DSP"</span>)]
    <span class="highlight-keyword">internal</span> Dsp Dsp { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">private</span> <span class="highlight-keyword">set</span>; }
}

<span class="highlight-keyword">private</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> Fader : FieldNode&lt;Fader&gt;
{
    [Element(Identifier = <span class="highlight-literal">"dB Value"</span>)]
    <span class="highlight-keyword">internal</span> RealParameter DBValue { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">private</span> <span class="highlight-keyword">set</span>; }

    <span class="highlight-keyword">internal</span> IntegerParameter Position { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">private</span> <span class="highlight-keyword">set</span>; }
}

<span class="highlight-keyword">private</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> Dsp : FieldNode&lt;Dsp&gt;
{
    <span class="highlight-keyword">internal</span> Input Input { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">private</span> <span class="highlight-keyword">set</span>; }
}

<span class="highlight-keyword">private</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> Input : FieldNode&lt;Input&gt;
{
    <span class="highlight-keyword">internal</span> BooleanParameter Phase { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">private</span> <span class="highlight-keyword">set</span>; }

    [Element(Identifier = <span class="highlight-literal">"LR Mode"</span>)]
    <span class="highlight-keyword">internal</span> EnumParameter&lt;LRMode&gt; LRMode { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">private</span> <span class="highlight-keyword">set</span>; }
}

[System.Diagnostics.CodeAnalysis.SuppressMessage(<span class="highlight-literal">"StyleCop.CSharp.DocumentationRules"</span>, <span class="highlight-literal">"SA1602:EnumerationItemsMustBeDocumented"</span>, Justification = <span class="highlight-literal">"Demo Code."</span>)]
<span class="highlight-keyword">private</span> <span class="highlight-keyword">enum</span> LRMode
{
    Stereo,

    RightToBoth,

    Side,

    LeftToBoth,

    Mono,

    MidSideToXY
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACACAAA");</script><p>A few things are of note here:</p><ul><li><p>
              The elements <span class="code">FPGM 1</span>, <span class="code">FPGM 2</span> and
              <span class="code">dB Value</span> have identifiers that cannot be <strong>C#</strong> property
              names. The associated properties need to carry an
              <a href="C26BE5B8.htm">ElementAttribute</a> instance with the
              correct identifier.
            </p></li><li><p>
              The getters and setters of the various properties can have any accessibility. However, since client code
              should never set any of the properties, it is best to declare the setter <span class="code">private</span>.
            </p></li><li><p>
              The <a href="http://msdn2.microsoft.com/en-us/library/ms141072" target="_blank">SuppressMessageAttribute</a>
              is only present to suppress a <strong>StyleCop</strong> warning. If you do not use
              <strong>StyleCop</strong>, the attribute is unnecessary.
            </p></li><li><p>
              The constants in the <span class="code">enum</span> and <span class="code">LRMode</span> have names that
              differ from the ones presented by the provider. This is possible because the library only checks that the
              provider enumeration and the local <span class="code">enum</span> have an equal number of constants and
              that they have the same integer values.
            </p></li><li><p>
              In rare cases, client code might only be interested in the integer value of an enumeration or does not
              want to statically confine the possible values an enumeration can have. In these cases, client code should
              use <a href="A018BBFD.htm">IntegerParameter</a> rather than
              <a href="9C580A35.htm">EnumParameter<span id="LST7CBA904E_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7CBA904E_0?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TEnum<span id="LST7CBA904E_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7CBA904E_1?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.
            </p></li></ul></div><div class="collapsibleAreaRegion" id="MainMethod"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Main Method</span></div><div id="ID2RBSection" class="collapsibleSection"><p>We can now iterate over the local database as follows ...</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAFABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAFABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAFABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAFABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">AsyncPump.Run(
    <span class="highlight-keyword">async</span> () =&gt;
    {
        <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> client = <span class="highlight-keyword">await</span> ConnectAsync(<span class="highlight-literal">"localhost"</span>, <span class="highlight-number">9000</span>))
        <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> consumer = <span class="highlight-keyword">await</span> Consumer&lt;SapphireRoot&gt;.CreateAsync(client))
        {
            WriteChildren(consumer.Root, <span class="highlight-number">0</span>);
        }
    });</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAFABAAA");</script><p>... and get the following output:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EADABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EADABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Node Sapphire
  Node Sources
    Node FPGM <span class="highlight-number">1</span>
      Node Fader
        Parameter dB Value: <span class="highlight-number">-255.999999999998</span>
        Parameter Position: <span class="highlight-number">0</span>
      Node DSP
        Node Input
          Parameter Phase: True
          Parameter LR Mode: Stereo
    Node FPGM <span class="highlight-number">2</span>
      Node Fader
        Parameter dB Value: <span class="highlight-number">9</span>
        Parameter Position: <span class="highlight-number">255</span>
      Node DSP
        Node Input
          Parameter Phase: False
          Parameter LR Mode: Stereo</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADABAAA");</script><p>Notes:</p><ul><li><p>
              Compared to the output we've seen on <a href="e0972d29-96f3-4dea-936b-f77001d077b1.htm">Page 5: Iterate over the Local Database</a>, this time
              the database only contains the elements that we've explicitly declared interest in. So, for large provider
              databases, the static interface offers a way to reduce the memory footprint on the consumer side.
            </p></li><li><p><a href="FD4252D9.htm">Consumer<span id="LST7CBA904E_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7CBA904E_2?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TRoot<span id="LST7CBA904E_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7CBA904E_3?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script><span id="LST7CBA904E_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7CBA904E_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>CreateAsync</a>
              verifies that the expectations we've declared match with what the provider sends. Any mismatch is signaled
              with a <a href="8D3B3D90.htm">ModelException</a>. This verification
              includes the presence of required parameters and nodes, the match of types and many other checks.
            </p></li></ul><p>Proceed to <a href="945c7c21-060f-4fb9-9cbd-842f0e031472.htm">Page 11: React to Changes</a>.</p></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://www.lawo.com" target="_blank">Copyright 2012-2015 Lawo AG. All rights reserved.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:andreas.huber%40lawo.com?Subject=Ember+ Sharp Project Documentation">Andreas Huber</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>