<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright 2012-2017 Lawo AG (http://www.lawo.com). -->
<!-- Distributed under the Boost Software License, Version 1.0. -->
<!-- (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt) -->
<topic id="df1c42d3-bc00-4786-88d6-2372b281043a" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>
        Communication errors are signaled through two different mechanisms, see the sections below for more
        information.
      </para>
      <autoOutline/>
    </introduction>
    <section address="ConnectionLost">
      <title>The ConnectionLost Event</title>
      <content>
        <para>
          At the lowest level, communication errors are signaled through the
          <codeEntityReference qualifyHint="true">E:Lawo.EmberPlusSharp.Model.Consumer`1.ConnectionLost</codeEntityReference>
          event, which can be used as demonstrated in the following method:
        </para>
        <code source="..\Lawo.EmberPlusSharpTest\Model\TutorialTest.cs" region="Connection Lost" language="c#"/>
        <para>
          We can test this by simply closing the provider, or by running the provider on a different computer and then
          disconnecting the network cable. In the former case
          <codeEntityReference qualifyHint="true">P:Lawo.IO.ConnectionLostEventArgs.Exception</codeEntityReference>
          is <codeInline>null</codeInline>. In the latter case
          <codeEntityReference qualifyHint="true">P:Lawo.IO.ConnectionLostEventArgs.Exception</codeEntityReference>
          indicates the reason for the error.
        </para>
      </content>
    </section>
    <section address="Exceptions">
      <title>Exceptions</title>
      <content>
        <para>
          Both
          <codeEntityReference autoUpgrade="true" qualifyHint="true">M:Lawo.EmberPlusSharp.Model.Consumer`1.CreateAsync(Lawo.EmberPlusSharp.S101.S101Client)</codeEntityReference>
          and
          <codeEntityReference autoUpgrade="true" qualifyHint="true">M:Lawo.EmberPlusSharp.Model.Consumer`1.SendAsync</codeEntityReference>
          can throw communication-related exceptions, which can be caught and handled as usual.
        </para>
        <para>
          This concludes the dynamic interface part of the
          <codeEntityReference>N:Lawo.EmberPlusSharp.Model</codeEntityReference> namespace tutorial. Proceed to
          <link xlink:href="06184592-a364-4e11-9721-551b6316ffc1"/>.
        </para>
      </content>
    </section>
    <relatedTopics/>
  </developerConceptualDocument>
</topic>
